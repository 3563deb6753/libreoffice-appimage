#!/bin/bash -x

# Generate LibreOffice AppImage
# by Antonio Faccioli
# Based on script by Simon Peter
# Released under the Mozilla Public License Version 2.0
# http://www.libreoffice.org/about-us/licenses/

pathVersion=$1
arch="${2:-x86-64}"
language="${3:-N}"
optHelp="${4:-N}"
optSync="${5:-N}"
optSignature="${6:-N}"

linkZsync=""
gpgPass=""

standard=(en-GB it ar zh-CN zh-TW fr de ja ko pt pt-BR es ru)
full=(af am ar as ast be bg bn-IN bn bo br brx bs ca-valencia ca cs cy da de dgo dz el en-GB en-ZA eo es et eu fa fi fr ga gd gl gu gug he hi hr hsb hu id is it ja ka kk km kmr kn ko kok ks lb lo lt lv mai mk ml mn mni mr my nb ne nl nn nr nso oc om or pa-IN pl pt-BR pt qtz ro ru rw sa-IN sat sd si sid sk sl sq sr-Latn sr ss st sv sw-TZ ta te tg th tn tr ts tt ug uk uz ve vec vi xh zh-CN zh-TW zu)

if [[ $arch == *"x86-64"* ]] ; then
	pathArch="x86_64"
fi

if [[ $pathVersion == *"daily"* ]] ; then
    APP=LibreOfficeDev
else
    APP=LibreOffice
fi

case "$pathVersion" in
"3.3.0.4")
  libreVersion="3.3.0"
  ;;
"3.3.1.2")
  libreVersion="3.3.1"
  ;;
"3.3.2.2")
  libreVersion="3.3.2"
  ;;
"3.3.3.1")
  libreVersion="3.3.3"
  ;;
"3.3.4.1")
	libreVersion="3.3.4"
	;;
"3.4.0.1")
  libreVersion="3.4.0rc1"
  ;;
"3.4.1.3")
  libreVersion="3.4.1"
  ;;
"3.4.2.3")
  libreVersion="3.4.2"
  ;;
"3.4.3.2")
  libreVersion="3.4.3"
  ;;
"3.4.4.1")
  libreVersion="3.4.4rc1"
  ;;
"3.4.5.2")
  libreVersion="3.4.5rc2"
  ;;
"3.4.6.2")
  libreVersion="3.4.6rc2"
  ;;
"3.5.0.3")
  libreVersion="3.5.0rc3"
  ;;
"3.5.1.2")
  libreVersion="3.5.1rc2"
  ;;
"3.5.2.2")
  libreVersion="3.5.2rc2"
  ;;
"3.5.3.2")
  libreVersion="3.5.3rc2"
  ;;
"3.5.4.2")
  libreVersion="3.5.4rc2"
  ;;
"3.5.5.3")
  libreVersion="3.5.5rc3"
  ;;
"3.5.6.2")
  libreVersion="3.5.6rc2"
  ;;
"3.5.7.2")
  libreVersion="3.5.7rc2"
  ;;
*)
  libreVersion=$pathVersion
  ;;
esac

set +e

if [[ $pathVersion == *"fresh"* ]] ; then
    nrVersion=$(wget -q "https://www.libreoffice.org/download/download" -O - | grep -o -e "/stable/.*/" | cut -d "/" -f 3 | head -n 1)
    path="https://download.documentfoundation.org/libreoffice/stable/"$nrVersion"/deb/"$pathArch"/"
    package="LibreOffice_"$nrVersion"_Linux_"$arch"_deb.tar.gz"
elif [[ $pathVersion == *"still"* ]] ; then
    nrVersion=$(wget -q "https://www.libreoffice.org/download/download" -O - | grep -o -e "/stable/.*/" | cut -d "/" -f 3 | head -n 3 | tail -n 1)
    path="https://download.documentfoundation.org/libreoffice/stable/"$nrVersion"/deb/"$pathArch"/"
    package="LibreOffice_"$nrVersion"_Linux_"$arch"_deb.tar.gz"
elif [[ $pathVersion == *"daily"* ]] ; then
    path="http://dev-builds.libreoffice.org/daily/master/Linux-rpm_deb-"$pathArch"@70-TDF/current/"
    package=$(wget -q "$path" -O - | grep -o -e ">mas.*Linux_x86-64_deb.tar.gz" | cut -d ">" -f 2)
    tmpVersion1=$(echo $package | cut -d "_" -f 4)
    tmpVersion2=$(echo $package | cut -d "_" -f 1 | cut -d "~" -f 2)
    nrVersion=$tmpVersion1"_"$tmpVersion2
else
    if [[ $pathVersion == "3."* ]] ; then
	nrVersion=$libreVersion
	path="https://downloadarchive.documentfoundation.org/libreoffice/old/"$pathVersion"/deb/"$pathArch"/"
	package="LibO_"$nrVersion"_Linux_"$arch"_install-deb_en-US.tar.gz"
    else
        nrVersion=$libreVersion
	path="https://download.documentfoundation.org/libreoffice/old/"$nrVersion"/deb/"$pathArch"/"
	package="LibreOffice_"$nrVersion"_Linux_"$arch"_deb.tar.gz"
    fi
fi

LibODownloadLink=$path$package

if [[ $optHelp == *"Y"* ]] ; then
	 if [[ $language != "N" ]] ; then
	   VERSION=$nrVersion"."$language".help"
  	 else
	   VERSION=$nrVersion".help"
   	 fi
else
	 if [[ $language != "N" ]] ; then
           VERSION=$nrVersion"."$language
	 else
	   VERSION=$nrVersion
	 fi
fi

mkdir -p ./$APP/$APP.AppDir
cd ./$APP

wget -c $LibODownloadLink

if [[ $language != "N" ]] ; then
    if [[ $language == *"standard"* ]] ; then
	    for element in ${standard[*]};
            do
               langPackage="LibreOffice_"$nrVersion"_Linux_"$arch"_deb_langpack_"$element".tar.gz"
               wget -c $path$langPackage
            done
    elif [[ $language == *"full"* ]] ; then
	    for element in ${full[*]};
            do
               langPackage="LibreOffice_"$nrVersion"_Linux_"$arch"_deb_langpack_"$element".tar.gz"
               wget -c $path$langPackage
            done
    else
            if [[ $pathVersion == "3."* ]] ; then
		langPackage="LibO_"$nrVersion"_Linux_"$arch"_langpack-deb_"$language".tar.gz"
		wget -c $path$langPackage
            else
		langPackage="LibreOffice_"$nrVersion"_Linux_"$arch"_deb_langpack_"$language".tar.gz"
                wget -c $path$langPackage
	    fi
    fi
fi

if [[ $optHelp == *"Y"* ]] ; then
    if [[ $language == *"standard"* ]] ; then
	     for element in ${standard[*]};
             do
                helpPackage="LibreOffice_"$nrVersion"_Linux_"$arch"_deb_helppack_"$element".tar.gz"
                wget -c $path$helpPackage
         done
    elif [[ $language == *"full"* ]] ; then
	     for element in ${full[*]};
             do
               helpPackage="LibreOffice_"$nrVersion"_Linux_"$arch"_deb_helppack_"$element".tar.gz"
               wget -c $path$helpPackage
         done
    else
			 if [[ $pathVersion == "3."* ]] ; then
           if [[ $language != "N" ]] ; then
						   helpPackage="LibO_"$nrVersion"_Linux_"$arch"_helppack-deb_"$language".tar.gz"
						   wget -c $path$helpPackage
				   else
						   helpPackage="LibO_"$nrVersion"_Linux_"$arch"_helppack-deb_en-US.tar.gz"
						   wget -c $path$helpPackage
					 fi
			 else
				   if [[ $language != "N" ]] ; then
						   helpPackage="LibreOffice_"$nrVersion"_Linux_"$arch"_deb_helppack_"$language".tar.gz"
						   wget -c $path$helpPackage
				   else
						   helpPackage="LibreOffice_"$nrVersion"_Linux_"$arch"_deb_helppack_en-US.tar.gz"
						   wget -c $path$helpPackage
					 fi
			 fi
    fi
fi



for i in *.tar.gz; do tar xfvz $i; done

cd $APP.AppDir/

find ../ -name *.deb -exec dpkg -x \{\} . \;

find . -type f -iname "bootstraprc" -exec sed -i "s|^UserInstallation=.*|UserInstallation=\$SYSUSERCONFIG/libreoffice/$nrVersion|g" {} +

find . -name startcenter.desktop -exec cp \{\} . \;

if [[ $pathVersion == *"daily"* ]] ; then
    sed -i -e 's|Name=.*|Name=LibreOfficeDev|g' startcenter.desktop
else
    sed -i -e 's|Name=.*|Name=LibreOffice|g' startcenter.desktop
fi

find -name *startcenter.png -path *hicolor*48x48* -exec cp \{\} . \;

BINARY=$(cat *.desktop | grep "Exec=" | head -n 1 | cut -d "=" -f 2 | cut -d " " -f 1)

mkdir -p usr/bin/
cd usr/bin/
rm ./$BINARY
find ../../opt -name soffice -path *program* -exec ln -s \{\} ./$BINARY \;
cd ../../

wget -c https://github.com/AppImage/AppImageKit/releases/download/continuous/AppRun-x86_64 -O AppRun # 64-bit
chmod a+x AppRun

cd ..

URL="https://github.com/probonopd/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
wget -c "$URL" -O appimagetool
chmod a+x ./appimagetool
set +x

if [[ $optSync == "N" ]] ; then
	VERSION=$VERSION ./appimagetool -v ./$APP.AppDir/
else
    if [[ $language == "N" ]] ; then
    	VERSION=$pathVersion ./appimagetool -u "zsync|"$linkZsync$APP"-"$pathVersion".AppImage.zsync" -v ./$APP.AppDir/
    else
        VERSION=$pathVersion"."$language ./appimagetool -u "zsync|$linkZsync$APP"-"$pathVersion"."$language".AppImage.zsync" -v ./$APP.AppDir/
    fi
fi

set -x

if [[ $language != "N" ]] ; then
	for i in $(find . -name "*.AppImage*" -print;); do gpg -b --armor --passphrase "$gpgPass" ${i}; done || true
fi

mkdir -p ../out/ || true
mv *.AppImage* ../out/
